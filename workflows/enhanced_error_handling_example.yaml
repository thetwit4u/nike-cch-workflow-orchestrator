schema_version: "1.1.2"
workflow_name: "Enhanced Error Handling with Issue Management"
workflow_id: "enhanced_error_handling_demo"
entry_point: Initialize_Workflow

initial_context:
  - dataURI
  - deliverySetId

nodes:
  Initialize_Workflow:
    type: set_state
    title: "Initialize Workflow Context"
    static_outputs:
      workflow_start_time: "2024-01-15T10:00:00Z"
      attempt_count: 1
      max_retries: 3
    on_success: Risky_S3_Operation

  Risky_S3_Operation:
    type: library_call
    title: "Risky S3 Data Retrieval"
    library_function_id: "s3#read_jsonpath"
    parameters:
      input_s3_uri_key: "dataURI"
      jsonpath_expression: "$.delivery_data"
    output_key: "delivery_data"
    on_success: Validate_Data
    on_failure: Create_S3_Issue

  Create_S3_Issue:
    type: create_issue
    title: "Create Issue for S3 Access Error"
    issue_config:
      severity: "HIGH"
      category: "S3_ACCESS_ERROR"
      assignee_rules:
        - condition: "error_code == 'S3-001'"
          assignee: "data-ops-team"
        - condition: "error_code == 'S3-403'"
          assignee: "security-team"
        - default: "infrastructure-team"
      external_systems:
        - type: "jira"
          project: "INFRA"
          issue_type: "Incident"
        - type: "slack"
          channel: "#data-ops-alerts"
      auto_assign: true
      include_context: true
      escalation_rules:
        - after_hours: 4
          action: "escalate_to_manager"
          notify: "team-lead@company.com"
    on_success: Wait_For_S3_Resolution
    on_failure: Fallback_S3_Error_Handler

  Wait_For_S3_Resolution:
    type: wait_for_resolution
    title: "Wait for S3 Issue Resolution"
    resolution_config:
      issue_id_key: "current_issue_id"
      timeout_hours: 24
      check_interval_minutes: 30
      escalation_rules:
        - after_hours: 12
          action: "escalate_to_manager"
          notify: "platform-manager@company.com"
        - after_hours: 20
          action: "notify_oncall"
          notify: "oncall-engineer@company.com"
      resolution_triggers:
        - status: "RESOLVED"
          action: "resume_workflow"
        - status: "CLOSED"
          action: "resume_workflow"
        - status: "CANCELLED"
          action: "fail_workflow"
      notification_settings:
        notify_on_resolution: true
        notify_assignee: true
    on_resolution: Reset_S3_Error_State
    on_timeout: Handle_S3_Resolution_Timeout
    on_failure: Critical_S3_Error_Handler

  Reset_S3_Error_State:
    type: reset_error_state
    title: "Reset S3 Error and Resume Processing"
    reset_config:
      clear_error_flags: true
      log_resumption: true
      restore_from_checkpoint: false
      notify_completion: true
      increment_retry_count: true
    on_success: Check_Retry_Count
    on_failure: Critical_S3_Error_Handler

  Check_Retry_Count:
    type: condition
    title: "Check if Retry Limit Exceeded"
    condition_on_key: "data.attempt_count"
    branches:
      "1": Retry_S3_Operation
      "2": Retry_S3_Operation
      "3": Retry_S3_Operation
      "_default": Max_Retries_Exceeded
    on_failure: Max_Retries_Exceeded

  Retry_S3_Operation:
    type: library_call
    title: "Retry S3 Operation After Resolution"
    library_function_id: "s3#read_jsonpath"
    parameters:
      input_s3_uri_key: "dataURI"
      jsonpath_expression: "$.delivery_data"
    output_key: "delivery_data"
    on_success: Validate_Data
    on_failure: Create_Retry_Failed_Issue

  Validate_Data:
    type: condition
    title: "Validate Retrieved Data"
    condition_on_key: "data.delivery_data"
    branches:
      "null": Data_Validation_Failed
      "_default": Process_Customs_Data
    on_failure: Data_Validation_Failed

  Process_Customs_Data:
    type: async_request
    title: "Process Customs Declaration"
    capability_id: "customs#process_declaration"
    input_keys:
      - "deliverySetId"
      - "delivery_data"
    output_keys:
      - "customs_status"
      - "declaration_number"
    on_response: Check_Customs_Status
    on_failure: Create_Customs_Issue

  Check_Customs_Status:
    type: condition
    title: "Check Customs Processing Status"
    condition_on_key: "data.customs_status"
    branches:
      "APPROVED": Finalize_Processing
      "PENDING": Wait_For_Customs_Approval
      "REJECTED": Create_Customs_Rejection_Issue
      "_default": Create_Customs_Issue
    on_failure: Create_Customs_Issue

  Create_Customs_Issue:
    type: create_issue
    title: "Create Issue for Customs Error"
    issue_config:
      severity: "MEDIUM"
      category: "CUSTOMS_PROCESSING_ERROR"
      assignee_rules:
        - condition: "error_code.startswith('CUSTOMS-')"
          assignee: "customs-team"
        - condition: "error_code == 'TIMEOUT-001'"
          assignee: "integration-team"
        - default: "operations-team"
      external_systems:
        - type: "servicenow"
          category: "customs_incident"
        - type: "email"
          recipients: ["customs-team@company.com"]
      auto_assign: true
      include_context: true
    on_success: Wait_For_Customs_Resolution
    on_failure: Fallback_Customs_Error_Handler

  Wait_For_Customs_Resolution:
    type: wait_for_resolution
    title: "Wait for Customs Issue Resolution"
    resolution_config:
      issue_id_key: "current_issue_id"
      timeout_hours: 48
      check_interval_minutes: 60
      escalation_rules:
        - after_hours: 24
          action: "escalate_to_supervisor"
          notify: "customs-supervisor@company.com"
    on_resolution: Reset_Customs_Error_State
    on_timeout: Handle_Customs_Resolution_Timeout
    on_failure: Critical_Customs_Error_Handler

  Reset_Customs_Error_State:
    type: reset_error_state
    title: "Reset Customs Error and Resume"
    reset_config:
      clear_error_flags: true
      log_resumption: true
      notify_completion: true
    on_success: Process_Customs_Data
    on_failure: Critical_Customs_Error_Handler

  Create_Customs_Rejection_Issue:
    type: create_issue
    title: "Create Issue for Customs Rejection"
    issue_config:
      severity: "HIGH"
      category: "CUSTOMS_REJECTION"
      assignee: "customs-compliance-team"
      external_systems:
        - type: "jira"
          project: "COMPLIANCE"
          issue_type: "Task"
      urgent: true
      requires_manual_review: true
    on_success: Wait_For_Rejection_Resolution
    on_failure: Critical_Customs_Error_Handler

  Wait_For_Rejection_Resolution:
    type: wait_for_resolution
    title: "Wait for Rejection Issue Resolution"
    resolution_config:
      issue_id_key: "current_issue_id"
      timeout_hours: 72
      requires_manual_approval: true
    on_resolution: Reset_Rejection_Error_State
    on_timeout: Escalate_Rejection_To_Legal
    on_failure: Critical_Customs_Error_Handler

  Reset_Rejection_Error_State:
    type: reset_error_state
    title: "Reset After Rejection Resolution"
    reset_config:
      clear_error_flags: true
      log_resumption: true
      notify_completion: true
    on_success: Process_Customs_Data
    on_failure: Critical_Customs_Error_Handler

  Wait_For_Customs_Approval:
    type: event_wait
    title: "Wait for Manual Customs Approval"
    event_key: "customs_approval_received"
    timeout_hours: 24
    on_event: Finalize_Processing
    on_timeout: Create_Customs_Timeout_Issue

  Create_Customs_Timeout_Issue:
    type: create_issue
    title: "Create Issue for Customs Approval Timeout"
    issue_config:
      severity: "MEDIUM"
      category: "CUSTOMS_APPROVAL_TIMEOUT"
      assignee: "customs-team"
    on_success: Wait_For_Timeout_Resolution
    on_failure: Fallback_Customs_Error_Handler

  Wait_For_Timeout_Resolution:
    type: wait_for_resolution
    title: "Wait for Timeout Issue Resolution"
    resolution_config:
      issue_id_key: "current_issue_id"
      timeout_hours: 24
    on_resolution: Reset_Timeout_Error_State
    on_timeout: Critical_Customs_Error_Handler
    on_failure: Critical_Customs_Error_Handler

  Reset_Timeout_Error_State:
    type: reset_error_state
    title: "Reset After Timeout Resolution"
    reset_config:
      clear_error_flags: true
      log_resumption: true
    on_success: Wait_For_Customs_Approval
    on_failure: Critical_Customs_Error_Handler

  # Success Path
  Finalize_Processing:
    type: set_state
    title: "Finalize Successful Processing"
    static_outputs:
      processing_complete: true
      final_status: "SUCCESS"
      completion_time: "2024-01-15T12:00:00Z"
    on_success: Send_Success_Notification

  Send_Success_Notification:
    type: enhanced_log_error
    title: "Log Successful Completion"
    error_config:
      create_issue: false
      notify_teams: true
      log_level: "INFO"
    default_message: "Workflow completed successfully"
    on_success: End_Successful_Workflow

  End_Successful_Workflow:
    type: end
    title: "End Successful Enhanced Error Workflow"

  # Error Handling Paths
  Create_Retry_Failed_Issue:
    type: create_issue
    title: "Create Issue for Persistent S3 Failure"
    issue_config:
      severity: "CRITICAL"
      category: "PERSISTENT_S3_ERROR"
      assignee: "platform-team"
      urgent: true
      requires_immediate_attention: true
    on_success: Critical_S3_Error_Handler
    on_failure: Emergency_Error_Handler

  Data_Validation_Failed:
    type: enhanced_log_error
    title: "Log Data Validation Failure"
    error_config:
      create_issue: true
      severity_mapping:
        "VALIDATION-001": "HIGH"
        "default": "MEDIUM"
      notify_teams: true
    default_error_code: "VALIDATION-001"
    default_message: "Data validation failed after S3 retrieval"
    on_success: End_Validation_Error_Workflow
    on_failure: Emergency_Error_Handler

  Max_Retries_Exceeded:
    type: enhanced_log_error
    title: "Log Maximum Retries Exceeded"
    error_config:
      create_issue: true
      severity_mapping:
        "RETRY-001": "CRITICAL"
      notify_teams: true
      escalate_immediately: true
    default_error_code: "RETRY-001"
    default_message: "Maximum retry attempts exceeded for S3 operation"
    on_success: End_Retry_Error_Workflow
    on_failure: Emergency_Error_Handler

  Handle_S3_Resolution_Timeout:
    type: enhanced_log_error
    title: "Handle S3 Resolution Timeout"
    error_config:
      create_issue: true
      severity_mapping:
        "TIMEOUT-S3": "HIGH"
      escalate_immediately: true
    default_error_code: "TIMEOUT-S3"
    default_message: "S3 issue resolution timed out"
    on_success: Escalate_S3_To_Management
    on_failure: Emergency_Error_Handler

  Handle_Customs_Resolution_Timeout:
    type: enhanced_log_error
    title: "Handle Customs Resolution Timeout"
    error_config:
      create_issue: true
      severity_mapping:
        "TIMEOUT-CUSTOMS": "HIGH"
    default_error_code: "TIMEOUT-CUSTOMS"
    default_message: "Customs issue resolution timed out"
    on_success: Escalate_Customs_To_Management
    on_failure: Emergency_Error_Handler

  Escalate_S3_To_Management:
    type: create_issue
    title: "Escalate S3 Issues to Management"
    issue_config:
      severity: "CRITICAL"
      category: "ESCALATED_S3_ERROR"
      assignee: "engineering-manager"
      urgent: true
    on_success: End_Escalated_Workflow
    on_failure: Emergency_Error_Handler

  Escalate_Customs_To_Management:
    type: create_issue
    title: "Escalate Customs Issues to Management"
    issue_config:
      severity: "CRITICAL"
      category: "ESCALATED_CUSTOMS_ERROR"
      assignee: "operations-manager"
      urgent: true
    on_success: End_Escalated_Workflow
    on_failure: Emergency_Error_Handler

  Escalate_Rejection_To_Legal:
    type: create_issue
    title: "Escalate Rejection to Legal Team"
    issue_config:
      severity: "CRITICAL"
      category: "LEGAL_REVIEW_REQUIRED"
      assignee: "legal-team"
      urgent: true
      requires_legal_review: true
    on_success: End_Legal_Escalation_Workflow
    on_failure: Emergency_Error_Handler

  # Fallback Error Handlers
  Fallback_S3_Error_Handler:
    type: enhanced_log_error
    title: "Fallback S3 Error Handler"
    error_config:
      create_issue: false
      preserve_error_state: true
    default_error_code: "S3-FALLBACK-001"
    default_message: "S3 fallback error handler triggered"
    on_success: Critical_S3_Error_Handler

  Fallback_Customs_Error_Handler:
    type: enhanced_log_error
    title: "Fallback Customs Error Handler"
    error_config:
      create_issue: false
      preserve_error_state: true
    default_error_code: "CUSTOMS-FALLBACK-001"
    default_message: "Customs fallback error handler triggered"
    on_success: Critical_Customs_Error_Handler

  # Critical Error Handlers
  Critical_S3_Error_Handler:
    type: enhanced_log_error
    title: "Critical S3 Error Handler"
    error_config:
      create_issue: true
      severity_mapping:
        "default": "CRITICAL"
      notify_teams: true
      escalate_immediately: true
    default_error_code: "CRITICAL-S3-001"
    default_message: "Critical S3 error requiring immediate attention"
    on_success: End_Critical_S3_Error_Workflow
    on_failure: Emergency_Error_Handler

  Critical_Customs_Error_Handler:
    type: enhanced_log_error
    title: "Critical Customs Error Handler"
    error_config:
      create_issue: true
      severity_mapping:
        "default": "CRITICAL"
      notify_teams: true
      escalate_immediately: true
    default_error_code: "CRITICAL-CUSTOMS-001"
    default_message: "Critical customs error requiring immediate attention"
    on_success: End_Critical_Customs_Error_Workflow
    on_failure: Emergency_Error_Handler

  Emergency_Error_Handler:
    type: enhanced_log_error
    title: "Emergency Error Handler"
    error_config:
      create_issue: true
      severity_mapping:
        "default": "CRITICAL"
      notify_teams: true
      escalate_immediately: true
      page_oncall: true
    default_error_code: "EMERGENCY-001"
    default_message: "Emergency error handler triggered - immediate intervention required"
    on_success: End_Emergency_Error_Workflow

  # End Nodes
  End_Validation_Error_Workflow:
    type: end
    title: "End - Data Validation Error"

  End_Retry_Error_Workflow:
    type: end
    title: "End - Maximum Retries Exceeded"

  End_Escalated_Workflow:
    type: end
    title: "End - Escalated to Management"

  End_Legal_Escalation_Workflow:
    type: end
    title: "End - Escalated to Legal"

  End_Critical_S3_Error_Workflow:
    type: end
    title: "End - Critical S3 Error"

  End_Critical_Customs_Error_Workflow:
    type: end
    title: "End - Critical Customs Error"

  End_Emergency_Error_Workflow:
    type: end
    title: "End - Emergency Error"